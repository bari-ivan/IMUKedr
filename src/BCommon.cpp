#include "BCommon.h"

/**
* Конструктор класса
* 
* Инициализирует экземпляр класса для реализации 
* модулей работы с барометрами STMicroelectronics
* 
* @param CS - номер пина выбора микросхемы
*/
BCommon::BCommon(uint8_t CS)  : IMUCommon(CS) {
  // --
}

/**
* Деструктор класса
* 
* Уничтожает экземпляр класса для реализации 
* модулей работы с барометрами STMicroelectronics
* и очищает память
*/
BCommon::~BCommon() {
  // Объекты с динамическим выделением памяти отсутствуют
}

/**
* Чтение данных из регистров давления
* 
* Читает и объединяет составные данные измерений давления 
* из трёх соответствующих регистров микросхемы
* 
* @return - результаты измерений давления
*/
uint32_t BCommon::readPressureRaw() {
  uint8_t buf[3];
  readMSBRegister(OUT_PRESSURE, 3, buf);

  return ((uint32_t)buf[2] << 16) | ((uint16_t)buf[1] << 8) | buf[0];
}

/**
* Чтение данных из регистров температуры
* 
* Читает и объединяет составные данные измерений температуры 
* из трёх соответствующих регистров микросхемы
* 
* @return - результаты измерений температуры
*/
int16_t BCommon::readTemperatureRaw() {
  uint8_t buf[2];
  readMSBRegister(OUT_TEMPERATURE, 2, buf);
  return ((int16_t)buf[1] << 8) | buf[0];
}

/**
* Чтение данных из регистров давления и температуры
* 
* Читает и объединяет составные данные измерений давления и температуры 
* из соответствующих регистров микросхемы
* 
* @param p - ссылка на переменную, в которую будут записаны
*            результаты измерений давления
* @param t - ссылка на переменную, в которую будут записаны
*            результаты измерений температуры
*/
void BCommon::readPT(int16_t *p, int16_t *t) {
  uint8_t buf[5];
  readMSBRegister(OUT_PRESSURE, 5, buf);

  *p = ((uint32_t)buf[4] << 16) | ((uint16_t)buf[3] << 8) | buf[2];
  *t = ((int16_t)buf[1] << 8) | buf[0];
}
